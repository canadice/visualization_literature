p + geom_point(data = exempeldata_extrem_points,
shape = "X",
size = 3)
p + geom_point(data = exempeldata_extrem_points,
shape = "x",
size = 3)
p + geom_point(data = exempeldata_extrem_points,
shape = "*",
size = 3)
p + geom_point(data = exempeldata_extrem_points,
shape = "*",
size = 10)
p + geom_point(data = exempeldata_extrem_points,
shape = "*",
size = 8)
p + geom_point(data = exempeldata_extrem_points,
shape = "X",
size = 8)
p + geom_point(data = exempeldata_extrem_points,
shape = "x",
size = 8)
p + geom_point(data = exempeldata_extrem_points,
shape = "x",
size = 5)
p + geom_point(data = exempeldata_extrem_points,
shape = "x",
size = 5,
color = "red")
p + geom_point(data = exempeldata_extrem_points,
shape = "x",
size = 5)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, fig.height = 2, fig.align = "center", fig.width = 6)
require(ggplot2)
require(grid)
require(gridExtra)
require(RColorBrewer)
require(dplyr)
require(tidyr)
require(stringr)
require(xtable)
require(kableExtra)
source("hietala_theme.R")
# rsconnect::deployDoc(doc = "Visualization Literature/732G45_Visualisering_Material.Rmd", appName = "732G45_visualisering_material", appTitle = "Material used for the course visualization part of 732G45", forceUpdate = TRUE)
# Chunk 6
data(iris)
p1 <- ggplot(iris) + aes(x = Species) + geom_bar(width = 0.6) +
labs(y = "Antal", x = "Art")
p2 <- ggplot(iris) + aes(x = Petal.Length) + geom_bar() +
labs(y = "Antal", x = "Bladlängd")
grid.arrange(p1, p2, nrow = 1)
# Chunk 7
p1 <- ggplot(iris) + aes(x = Species) + geom_bar(width = 0.6) +
labs(y = "Antal", x = "Art")
p2 <- ggplot(iris) + aes(x = Species) + geom_bar(width = 0.6) +
labs(y = "Antalet blommor av olika arter", x = "Art")
grid.arrange(p1, p2, nrow = 1)
# Chunk 8
p1 <- ggplot(iris) + aes(x = Species) + geom_bar(width = 0.6) +
labs(y = "Antal", x = "Art")
p2 <- p1 + theme(panel.grid.major.y = element_line(color = "black"),
panel.grid.minor.y = element_line(color = "black"))
grid.arrange(p1, p2, nrow = 1)
# Chunk 9
p1 <- ggplot(iris) + aes(x = Species) + geom_bar(width = 0.6) +
labs(y = "Antal", x = "Art")
p2 <- p1 + theme(axis.text = element_text(size = 8, color = "black"),
axis.title.y = element_text(angle = 0, vjust = 0.5, size = 9),
axis.title.x = element_text(size = 9))
grid.arrange(p1, p2, nrow = 1)
# Chunk 10
ggplot(iris) + aes(x = Species) + geom_bar(width = 0.6) +
labs(y = "Antal", x = "Art", caption = "Källa: Fisher, R. A. (1936)")
# Chunk 11
require(ggplot2)
# Chunk 12
exempeldata <- read.csv2(file = "732G45_exempeldata.csv")
head(exempeldata, n = 5)
# Chunk 13
theme_set(theme_gray())
# Chunk 14
ggplot(exempeldata)
# Chunk 15
ggplot(exempeldata) + aes(x = bil)
# Chunk 16
ggplot(exempeldata) + aes(x = bil) + geom_bar()
# Chunk 17
ggplot(exempeldata) + aes(x = bil) + geom_bar(aes(y = stat(count/sum(count))))
# Chunk 18
ggplot(exempeldata) + aes(x = bil) + geom_bar(aes(y = stat(count/sum(count)))) + theme_bw()
# Chunk 19
p <- ggplot(exempeldata) + aes(x = bil) + geom_bar(aes(y = stat(count/sum(count)))) + theme_bw()
# Chunk 20
p
# Chunk 21
p + coord_flip()
# Chunk 22
p + scale_y_continuous(labels = scales::percent)
# Chunk 23
p <- p + scale_y_continuous(labels = scales::percent)
p
# Chunk 24
exempeltabell <- as.data.frame(table(exempeldata$bil))
colnames(exempeltabell) <- c("Märke", "Frekvens")
kable(exempeltabell, format = "html", caption = "Fördelning av bilmärken i urvalet") %>%
kable_styling(position = "center", full_width = FALSE)
# Chunk 25
head(exempeltabell)
# Chunk 26
ggplot(exempeltabell) + aes(x = Märke, y = Frekvens) + geom_bar(stat = "identity") + theme_bw()
# Chunk 27
p <- ggplot(exempeldata) + aes(x = bil) +
geom_bar(fill = "dark orange",
color = "black",
aes(y = stat(count/sum(count)))) +
theme_bw()
p
# Chunk 28
p <- p + theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray70"),
panel.grid.minor.y = element_line(color = "gray80"))
p
# Chunk 29
p <- p + labs(x = "Bilmärke", y = "Andel", caption = "Källa: Hietala (2019)")
p
# Chunk 30
p + scale_y_continuous(labels = scales::percent) + labs(y = "")
# Chunk 31
p <- p + theme(plot.caption = element_text(face = "italic"),
axis.title.y = element_text(angle = 0, vjust = 0.5, size = 11),
axis.title.x = element_text(size = 11),
axis.text = element_text(size = 10, color = "black"))
p
# Chunk 32
p + scale_y_continuous(breaks = seq(from = 0, to = 1, by = .10))
# Chunk 33
p + scale_y_continuous(breaks = seq(from = 0, to = 1, by = .10),
limits = c(0, 0.35))
# Chunk 34
p <- p + scale_y_continuous(breaks = seq(from = 0, to = 1, by = .10),
limits = c(0, 0.25),
expand = c(0,0))
p
# Chunk 35
p <- ggplot(exempeldata) +
aes(x = civilstand, fill = bil) +
geom_bar(position = "dodge") +
theme_bw()
p
# Chunk 36
ggplot(exempeldata) + aes(x = civilstand, fill = bil) +
geom_bar(aes(y = stat(count/sum(count))),
position = "dodge") +
theme_bw()
# Chunk 37
ggplot(exempeldata) + aes(x = civilstand, fill = bil) +
geom_bar(aes(y = stat(count/tapply(count, x, sum)[x])),
position = "dodge") +
theme_bw()
# Chunk 38
p1 <- ggplot(exempeldata) + aes(x = civilstand, fill = bil) +
geom_bar(aes(y = stat(count/sum(count))), position = "dodge") +
theme_bw()
p2 <- ggplot(exempeldata) + aes(x = civilstand, fill = bil) +
geom_bar(aes(y = stat(count/tapply(count, x, sum)[x])), position = "dodge") +
theme_bw()
grid.arrange(p1, p2, nrow = 1)
# Chunk 39
p <- ggplot(exempeldata) +
aes(x = civilstand,
fill = bil) +
geom_bar(aes(y = stat(count/sum(count))),
position = "dodge",
color = "black") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray70"),
panel.grid.minor.y = element_line(color = "gray80"),
plot.caption = element_text(face = "italic"),
axis.title.y = element_text(angle = 0, vjust = 0.5, size = 11),
axis.title.x = element_text(size = 11),
axis.text = element_text(size = 10, color = "black")) +
labs(x = "Civilstånd",
y = "Andel",
caption = "Källa: Hietala (2019)") +
scale_y_continuous(expand = c(0,0),
breaks = seq(0, 0.20, by = 0.05),
limits = c(0, 0.16))
p
# Chunk 40
p <- p + scale_fill_manual(name = "Bilmärke",
values = brewer.pal(n = 8,
name = "Oranges"))
p
# Chunk 41
p <- ggplot(exempeldata) + aes(alder)
# Chunk 42
p <- p + geom_histogram(fill = "orange",
color = "black",
bins = 10)
p
# Chunk 43
p <- p + scale_y_continuous(expand = c(0,0), limits = c(0, 20)) +
theme_bw() + theme(axis.title.y =
element_text(angle = 0,
hjust = 1,
vjust = 0.5),
plot.title =
element_text(hjust = 0.5),
panel.grid.major.x =
element_blank(),
panel.grid.minor.x =
element_blank(),
panel.grid.major.y =
element_line(color = "dark gray")) +
labs(y = "Antal",
x = "Ålder",
title = "Fördelning av ålder",
caption = "Källa: Hietala (2019)")
p
# Chunk 44
p <- ggplot(exempeldata) + aes(x = factor(0), y = alder) +
geom_boxplot(fill = "orange") +
scale_x_discrete(breaks = NULL)
p
# Chunk 45
p <- p + theme_bw() + theme(axis.title.y =
element_text(angle = 0,
hjust = 1,
vjust = 0.5),
plot.title =
element_text(hjust = 0.5),
panel.grid.major.x =
element_blank(),
panel.grid.minor.x =
element_blank(),
panel.grid.major.y =
element_line(color = "dark gray")) +
labs(y = "Ålder",
x = NULL,
title = "Fördelning av ålder",
caption = "Källa: Hietala (2019)")
p
# Chunk 46
# Changes standard fig.height to 4 for time series.
knitr::opts_chunk$set(echo = TRUE, fig.height = 4, fig.align = "center", fig.width = 6)
# Chunk 47
p <- ggplot(exempeldata) + aes(x = alder, y = lon) + geom_point()
p
# Chunk 48
p <-
p + theme_bw() +
theme(axis.title.y =
element_text(angle = 0,
hjust = 1,
vjust = 0.5),
plot.title =
element_text(hjust = 0.5),
plot.subtitle =
element_text(hjust = 0.5),
panel.grid.major.x =
element_line(color = "gray"),
panel.grid.minor.x =
element_line(color = "light gray"),
panel.grid.major.y =
element_line(color = "gray"),
panel.grid.minor.y =
element_line(color = "light gray")) +
labs(title = "Sambandet mellan ålder och lön",
x = "Ålder",
y = "Lön",
caption = "Källa: Hietala (2019)")
p
# Chunk 49
p + geom_smooth(method = lm, se = FALSE)
# Chunk 50
exempeldata_extrem <- exempeldata %>%
filter(abs(lon - predict(lm(lon ~ alder, data = exempeldata))) < 12000)
exempeldata_extrem_points <- exempeldata %>%
filter(abs(lon - predict(lm(lon ~ alder, data = exempeldata))) > 12000)
# Chunk 51
p <-
p + geom_smooth(aes(color = "med_extrem"),
method = lm,
se = FALSE)
p
# Chunk 52
p <-
p + geom_smooth(data = exempeldata_extrem,
aes(color = "utan_extrem"),
method = lm,
se = FALSE)
p
# Chunk 53
p <-
p + scale_color_manual(name = "Datamaterial",
values = c("med_extrem" = "black",
"utan_extrem" = "orange"),
labels = c("med_extrem" = "Hela materialet",
"utan_extrem" = "Utan extremvärden"))
p
# Chunk 54
p + geom_point(data = exempeldata_extrem_points,
shape = "x",
size = 4)
# Chunk 55
tidsserie_exempel <- read.csv2("tidsserie.csv", encoding = "UTF-8")
tidsserie_exempel <- tidsserie_exempel %>% gather(Region, Antal, Hela.landet, Västernorrland, Östergötland)
tidsserie_exempel$Region <- str_replace_all(tidsserie_exempel$Region, pattern = "\\.", " ")
colnames(tidsserie_exempel)[1] <- "År"
# Chunk 56
kable(head(tidsserie_exempel, n = 5), format = "html", caption = "Första observationerna i datamaterialet med en grupperingsvariabel Region") %>%
kable_styling(position = "center", full_width = FALSE)
# Chunk 57
## Anger att vi endast vill ha en del av data i diagrammet
p <-
ggplot(
filter(.data = tidsserie_exempel, Region == "Hela landet")
)
# Chunk 58
p <-
p + aes(x = År, y = Antal) +
geom_line(color = "dark orange", size = 1)
p
# Chunk 59
p <-
p + theme_bw() + theme(axis.title.y =
element_text(angle = 0,
hjust = 1,
vjust = 0.5),
plot.title =
element_text(hjust = 0.5),
plot.subtitle =
element_text(hjust = 0.5),
panel.grid.major.x =
element_line(color = "dark gray"),
panel.grid.minor.x =
element_line(color = "gray"),
panel.grid.major.y =
element_line(color = "dark gray"),
panel.grid.minor.y =
element_line(color = "gray")) +
labs(y = "Antal",
x = "År",
title = "Antal anmälda våldsbrott per 100 000 invånare",
subtitle = "Hela landet",
caption = "Källa: SCB (2012)")
p
# Chunk 60
p <- ggplot(tidsserie_exempel) +
aes(x = År,
y = Antal,
color = Region,
group = Region) +
geom_line(size = 1)
p
# Chunk 61
p <-
p + scale_color_manual(values =
c("black", brewer.pal(n = 3, "Oranges")[-1])) +
theme_bw() + theme(axis.title.y =
element_text(angle = 0,
hjust = 1,
vjust = 0.5),
plot.title =
element_text(hjust = 0.5),
plot.subtitle =
element_text(hjust = 0.5),
panel.grid.major.x =
element_line(color = "dark gray"),
panel.grid.minor.x =
element_line(color = "gray"),
panel.grid.major.y =
element_line(color = "dark gray"),
panel.grid.minor.y =
element_line(color = "gray")) +
labs(y = "Antal",
x = "År",
title = "Antal anmälda våldsbrott per 100 000 invånare",
subtitle = "Jämförelse av riket och två län",
caption = "Källa: SCB (2012)")
p
kable(head(iris, n = 5), format = "html", caption = "Första observationerna i Iris-data") %>%
kable_styling(position = "center", full_width = FALSE)
require(GGally)
ggpairs()
ggpairs(data = iris,
columns = 1:4,
title = "Samband mellan mått på blomor",
upper = "blank",
diag = "blank",
lower = "points")
ggpairs(data = iris,
columns = 1:4,
title = "Samband mellan mått på blomor",
upper = list("blank"),
diag = list("blank"),
lower = list("points"))
ggpairs(data = iris,
columns = 1:4,
title = "Samband mellan mått på blomor",
upper = list("na"),
diag = list("blank"),
lower = list("points"))
ggpairs(data = iris,
columns = 1:4,
title = "Samband mellan mått på blomor",
upper = list(continuous = "blank"),
diag = list("blank"),
lower = list("points"))
ggpairs(data = iris,
columns = 1:4,
title = "Samband mellan mått på blomor",
upper = list(continuous = "blank"),
diag = list(continuous = "blankDiag"),
lower = list("points"))
ggpairs(data = iris,
columns = 1:4,
title = "Samband mellan mått på blommor",
upper = list(continuous = "blank"),
diag = list(continuous = "blankDiag"),
lower = list(continuous = "points")) +
theme_bw()
ggpairs(data = iris,
columns = 1:4,
title = "Samband mellan mått på blommor",
upper = list(continuous = "blank"),
diag = list(continuous = "blankDiag"),
lower = list(continuous = "points")) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5))
p <- ggpairs(data = iris,
columns = 1:4,
title = "Samband mellan mått på blommor",
upper = list(continuous = "blank"),
diag = list(continuous = "blankDiag"),
lower = list(continuous = "points"),
axisLabels = "none"
)
p
p <- p + theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p
ggpairs(data = iris,
columns = 1:4,
title = "Samband mellan mått på blommor",
upper = list(continuous = "blank"),
diag = list(continuous = "blankDiag"),
lower = list(continuous = "points"),
axisLabels = "none",
mapping = aes(color = Species)
)
ggpairs(data = iris,
columns = 1:4,
title = "Samband mellan mått på blommor",
upper = list(continuous = "blank"),
diag = list(continuous = "blankDiag"),
lower = list(continuous = "points"),
axisLabels = "none",
mapping = aes(color = Species)
) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggpairs(data = iris,
columns = 1:4,
title = "Samband mellan mått på blommor",
upper = list(continuous = "blank"),
diag = list(continuous = "blankDiag"),
lower = list(continuous = "points"),
axisLabels = "none",
mapping = aes(color = Species)
) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(values = c("red", "black", "gray"))
ggpairs(data = iris,
columns = 1:4,
title = "Samband mellan mått på blommor",
upper = list(continuous = "blank"),
diag = list(continuous = "blankDiag"),
lower = list(continuous = "points"),
axisLabels = "none",
mapping = aes(color = Species),
legend = c(3,3)
) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggpairs(data = iris,
columns = 1:4,
title = "Samband mellan mått på blommor",
upper = list(continuous = "blank"),
diag = list(continuous = "blankDiag"),
lower = list(continuous = "points"),
axisLabels = "none",
mapping = aes(color = Species),
legend = c(2,3)
) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggpairs(data = iris,
columns = 1:4,
title = "Samband mellan mått på blommor",
upper = list(continuous = "blank"),
diag = list(continuous = "blankDiag"),
lower = list(continuous = "points"),
axisLabels = "none",
mapping = aes(color = Species),
legend = 3
) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
